name: Deploy to NPM

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/deploy.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Biome checks
        run: npm run format && npm run lint

  version-and-publish:
    name: Version and Publish
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Auto-increment version
        id: version-update
        run: |
          # 현재 버전 가져오기
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # 패치 버전 증가 (예: 1.3.1 -> 1.3.2)
          npm version patch --no-git-tag-version
          
          # 업데이트된 버전 가져오기
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
          # 결과 저장
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # 변경 사항 커밋
          git add package.json
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git tag v$NEW_VERSION

      - name: Push changes
        run: git push && git push --tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-update.outputs.version }}
          release_name: Release v${{ steps.version-update.outputs.version }}
          draft: false
          prerelease: false
          body: |
            See [CHANGELOG.md](https://github.com/jiji-hoon96/lib-version-check/blob/main/CHANGELOG.md) for details.

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}